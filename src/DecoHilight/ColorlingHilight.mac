//----------------------------------------------------------------
//	秀丸用マクロ (ColorlingHilight.mac)
//	編集中の .Hilightファイルを実際の色で表示する
//
//	  環境	:	秀丸 ver 8.77 / HmJre.dll ver 5.01
//
//	  Author:	 eamat. 	 http://www6.atwiki.jp/eamat/
//	  Create	 2009.07.19
//	  LastUpdate 2020.05.31	 /<ColorSetEx> の記述内容変更に伴い検索パターンを更新
//----------------------------------------------------------------
$hilightfile=leftstr(currentmacrofilename,strstr(currentmacrofilename,".mac")) + ".hilight";

$tmpfile = getenv("TEMP") + "\\~chtmp.hilight";
// $tmpfile = currentmacrodirectory + "\\~chtmp.hilight";  // debug

// カラーマーカーの描画モード (マクロヘルプ : colormarker文 の項参照)
//	 0: 編集しても維持
//	 1: 編集したら分裂
//	 2: 編集したら消える
#MarkerMode = 1;
#MarkerUdata= 3;  // 識別用 (値は別に何でもいい)

call initialize;
call main;
call finalize;
endmacro;

main:
debuginfo 1;
	call BeginCheck;
	if (##return)	{
		call LoadHilight;
		call Paint_ColorSet;		##colorset=##return;
		call Paint_ColorSetEx;
		if (##colorset)   {
			call Paint_HilightMulti;
			call Paint_Defines "Defines";
			call Paint_Defines "DefinesInvalid";
			call Paint_Defines "Ifvalue";
			call Paint_Defines "IfvalueInvalid";
		}
	}
return;

//.----- 初期化・後始末 ------------------------------------------------------------
initialize: 	// 初期化
	loaddll hidemarudir + "\\hmjre.dll";
	if (!result) {
		message "HmJre.dll がロードできません\n秀丸エディタ v7.0 以上をインストールしてください";
		endmacro;
	}
	if (rightstr(hex(dllfunc("JreGetVersion")), 4) < "0190") {
		message "HmJre.dll のバージョンが古いです\n秀丸エディタ v7.0 以上をインストールしてください";
		endmacro;
	}

	setcompatiblemode 0x20F;
	title basename2 + " -- 強調表示ファイルの見た目をその通りに描画";
	disabledraw;
	#x=x; #y=y;
	$searchbuffer=searchbuffer;
	#searchoption=searchoption;
	if (800 <= version)	{
		#searchoption2=searchoption2;
		disablehistory 0xFF;
	}
return;

finalize:		// 後始末
	if (strlen(loaddllfile))  freedll;
	if (800 > version)	setsearch $searchbuffer, #searchoption;
	else				setsearch $searchbuffer, #searchoption, #searchoption2;
	moveto #x , #y;
	escape;
	escapeinselect;
	title 0;
	enabledraw;
return;

BeginCheck: 	// 戻り値 0:キャンセル 1:続行
	// #MarkerUdata = カラーマーカー識別フラグ
	// #x #y		= マクロ起動時のカーソル位置(ちらつき防止用)

	// ファイルタイプチェック
	if (filetype != ".hilight")   {
		searchdown "^[0-9]+,.+|^/<.*>", regular,loop;
		if (!result)	{
			message "このファイルは強調表示ファイルではないようです。";
			return 0;
		}
	}

	// (一時的な設定)になってるときはメニュー出して処理問い合わせ
	call RemoveColorMarker #MarkerUdata;
	if (configstate & 0x01) {
		if (""==currentconfigset)	$$cfgset = "（共通）";
		$$cfgset=" ["+currentconfigset+"] ";
		$mnu[0]="■■ "+basename2+" は、現在 （一時的な設定） になっています。処理を選択してください ■■";
		$mnu[1]="------------------------------------------------------------------------";
		if (800 <= version)		$mnu[1]="\x01";
		$mnu[2]=" &1. リセット                 → （一時的な設定）を破棄。本来の "+filetype+"の設定 に戻す。";
		$mnu[3]=" &2. 続行                   → （一時的な設定）が書き換わる。もしくは破棄される。";
		$mnu[4]=" &3. 強制保存後に続行 → （一時的な設定） で"+$$cfgset+"を上書きしてから実行";
		$mnu[5]=" &4. キャンセル";

		moveto #x , #y;
		enabledraw;
		call ShowMenu 6,2;
		disabledraw;
		if (3+2==##return) saveconfig;
		if (1+2==##return) configset currentconfigset, 1;
		if (0==##return || 1+2==##return || 4+2==##return)	return 0;
	}
return 1;

//.-------- 実行ルーチン -----------------------------------------------------
LoadHilight:		// 強調表示などを一時的な設定で読み込む
	//	$hilightfile = 強調ファイル強調用設定ファイル
	//	$tmpfile	 = 強調表示情報一時保存先
	//	#x #y		 = マクロ起動時のカーソル位置(ちらつき防止用)

	// 色情報とか
	if (!updated)	loadhilight filename,0,0x1F;
	else	{
		call CurrentFileToTemporarilySaved $tmpfile, #x, #y;
		loadhilight $tmpfile,0,0x1F;
		run getenv("COMSPEC") + " /C del " + $$1 + " >nul";
	}
	// 強調ファイルの強調
	loadhilight $hilightfile ,0,0x01;

	// 強調表示ON & 複数行コメント定義：秀丸マクロ
	config "y+ xColorComment:15";
return;

Paint_ColorSet: 	// カラーセットの定義領域を実際の色とスタイルで塗る
	//	戻り値	1:項目あり 0:なし

	// /<ColorSet>
	// カラー行書式  "/[n1][n2]:0x00000000" (n3)
	call _StartInselectSearch "ColorSet", "(?<=^/\\[)[0-9]+";
	if (!result)	return 0;

	// 事前に loadhilight 済なので内容を見ずにgetconfigcolor()で値を取る
	// 透明:-1 透過:11 システム色の場合も実際の描画色が来るため変換は不要
	while(result){
		##n1=val(gettext(foundtopx,foundtopy,foundendx,foundendy));
		// [32] カーソル行(IMEON時) かつ 背景モードなら 背景=指定色 をセット
		if (##n1==32 && 2==getconfig("UnderLine"))
			call _lineMarker getconfigcolor(0,0),	getconfigcolor(##n1,0),getconfigcolor(##n1,2);
		else
			call _lineMarker getconfigcolor(##n1,0),getconfigcolor(##n1,1),getconfigcolor(##n1,2);
		finddown;
	}
return 1;

Paint_ColorSetEx:	// 拡張カラーセットの定義領域を実際の色とスタイルで塗る
	//	戻り値	1:項目あり 0:なし

	// システムカラーの読出し getconfig()では実際の色が取れないため
	// 一旦configcolorにセットしてから getconfigcolor()で読み出す
	##fore=getconfigcolor(0,0); ##back=getconfigcolor(0,1);
	configcolor "[0][0]:0x01000008 [0][1]:0x01000005";
	##SysCol[0]=getconfigcolor(0,0);	##SysCol[1]=getconfigcolor(0,1);
	configcolor "[0][0]:0x"+hex(##fore)+" [0][1]:0x"+hex(##back);

	//	/<ColorSetEx>
	//	拡張カラー情報定義 "(PlaceName)ColorEx:0x00000000"
	//		/CurLineColorEx	 : カーソル行	0x01000008 : システム文字色
	//										0x01000005 : システム背景色
	//		/RulerColorEx	 : ルーラー色	0xFFFFFFFF : 文字と同じ(透過)
	//		/RulerBackEx 	 : ルーラー背景 0xFFFFFFFF : 背景と同じ

//	.hilightの表記ルールが変わった模様 :  CurLineColorEx  -->  /CurLineColorEx
	$$ptn = "^/(.+?)(Color|Back)Ex:(0x[0-9A-F]+)";			// 2020.05.31
	call _StartInselectSearch "ColorSetEx", $$ptn;
	if (!result)	return 0;
	##max=-1;
	while(result){
		$$buf=gettext(foundtopx,foundtopy,foundendx,foundendy);
		if (0>dllfunc("FindRegular",$$ptn,$$buf))	 break;
		$$place=midstr($$buf,dllfunc("GetLastMatchTagPosition",1),dllfunc("GetLastMatchTagLength",1));
		if (-1==strstr($$place,$$ColExPlace[##max]))	{
			##max=##max+1;
			$$ColExPlace[##max] = $$place;
			##ColEx[##max][0]=-1; ##ColEx[##max][1]=-1;
		}
		$$fb=midstr($$buf,dllfunc("GetLastMatchTagPosition",2),dllfunc("GetLastMatchTagLength",2));
		// カーソル行かつ 背景モードなら 背景=指定色 をセット
		if		(0<=strstr($$place,"CurLine") && 2==getconfig("UnderLine")) ##i=1;
		else if (0<=strstr($$fb,"Color"))									##i=0;	// Foreground
		else																##i=1;	// Background
		##ColEx[##max][##i] = val(midstr($$buf,dllfunc("GetLastMatchTagPosition",3),dllfunc("GetLastMatchTagLength",3)));


		// システム指定色
		if (##ColEx[##max][##i] == 0x01000008)	##ColEx[##max][##i] = ##SysCol[0];
		if (##ColEx[##max][##i] == 0x01000005)	##ColEx[##max][##i] = ##SysCol[1];
		finddown;
	}

	// ペイント
	##i=0;
	call _StartInselectSearch "ColorSetEx", "^/.+?(?=(Color|Back)Ex:0x[0-9A-F]+)";			// 2020.05.31
	while(result){
		$$place = gettext(foundtopx,foundtopy,foundendx,foundendy);
		if (-1==strstr($$place,$$ColExPlace[##i]))	 ##i=##i+1;
		call _lineMarker ##ColEx[##i][0], ##ColEx[##i][1], 0;
		finddown;
	}
return 1;

Paint_HilightMulti: // 複数行の強調の定義領域を実際の色とスタイルで塗る
	//	戻り値	1:項目あり 0:なし
	call _StartInselectSearch "HilightMulti","(?<=^/)[0-9A-F]+(?=,)";
	if (!result)	return 0;
	while(result){
		// 基本は ColorSetのインデクス番号と同じ
		// 強調5〜8, 行の強調3/4, 特に強調3/4 は-7ずつずれている
		##n1 = val("0x"+gettext(foundtopx,foundtopy,foundendx,foundendy));
		if (0x1d<=##n1) 	##n1 = ##n1+7;
		call _lineMarker getconfigcolor(##n1,0), getconfigcolor(##n1,1), getconfigcolor(##n1,2);
		finddown;
	}
return 1;

Paint_Defines:		// #ifdef等の詳細の定義領域を実際の色とスタイルで塗る
	//	$$1 = セクションタイトル
	//	戻り値	1:項目あり 0:なし

	call _StartInselectSearch $$1,"(?<=^/\").*(?=\")";
	if (!result)	return 0;
	##n1=26;	// #ifdef等での無効部分
	while(result){
		// "//color:1〜8"が強調表示1〜8、"//color:9〜12"が 特に強調1〜4
		$$buf = gettext(foundtopx,foundtopy,foundendx,foundendy);
		if (0<=dllfunc("FindRegularNoCaseSense","//color:([0-9]+)",$$buf))	{
			##i=val(midstr($$buf,dllfunc("GetLastMatchTagPosition",1),dllfunc("GetLastMatchTagLength",1)));

			if (##i==1) 	##n1=4; 	// 強調1
			if (##i==2) 	##n1=7; 	// 強調2
			if (##i==3) 	##n1=22;	// 強調3
			if (##i==4) 	##n1=23;	// 強調4
			if (##i==5) 	##n1=36;	// 強調5
			if (##i==6) 	##n1=37;	// 強調6
			if (##i==7) 	##n1=38;	// 強調7
			if (##i==8) 	##n1=39;	// 強調8
			if (##i==9) 	##n1=5; 	// 特に強調1
			if (##i==10)	##n1=8; 	// 特に強調2
			if (##i==11)	##n1=40;	// 特に強調3
			if (##i==12)	##n1=41;	// 特に強調4
		}
		call _lineMarker getconfigcolor(##n1,0), getconfigcolor(##n1,1), getconfigcolor(##n1,2);
		finddown;
	}
return 1;

_StartInselectSearch:	// 選択範囲を指定してサーチ開始
	//	in	$$1 	= 対象セクション
	//		$$2 	= ループサーチ文字列
	//	out result	= 1:検索対象あり 0:なし

	// /<Section>〜/<NextSection> を選択
	escape;
	escapeinselect;
	searchdown "^/<" + $$1 + ">",regular,nocasesense,loop;
	if (!result)	return;
	beginsel;
	searchdown ".*(?=^/<)",regular;
	if (!result)	gofileend;

	// サーチスタート (正規表現固定)
	searchdown $$2 ,regular,nocasesense,inselect;
return;

_lineMarker:	// カーソル行をマーカーでペイントする
	//	##1 		= 文字色
	//	##2 		= 背景色
	//	##3 		= スタイル
	//	#MarkerMode = 描画モード
	//	#MarkerUdata= 識別フラグ(カラーマーカー除去時の判別用)

	selectline;
	colormarker ##1, ##2, ##3,#MarkerMode,#MarkerUdata;
	escape;
	down;         // 2017.10.28

return;


//.-------- 汎用っぽいルーチン ---------------------------------------------------------
ShowMenu:			// メニュー表示
	//	$mnu[] = メニュー文字列
	//	##1    = メニュー数
	//	##2    = メッセージ行数 (選択不可にする)
	menuarray $mnu,##1;
	if (0!=result && ##2>=result)	goto ShowMenu;
return result;

CurrentFileToTemporarilySaved:	// カレントファイルの全内容をテンポラリに保存
	// $$1	= テンポラリ保存先ファイルパス
	// ##2	= マクロ起動時のカーソル位置 x (ちらつき防止用)
	// ##3	=							 y

	//カレントファイルの全内容をバッファにセット
	// 丸ごとやるとファイルサイズが少し大きめの時に怒られるので100行単位で分割
	disabledraw;
	gofiletop;
	##bufmax=-1;
	while(lineno != linecount2){
		##bufmax=##bufmax+1;
		##startline=lineno;
		movetolineno 1,lineno+100;
		$$buf[##bufmax] = gettext2(0,##startline,linelen2,lineno);
	}

	// テンポラリファイルに保存
	##h = hidemaruhandle(0);
	moveto ##2 , ##3;
	openfile "/h";
	while(##i<=##bufmax){
		insert $$buf[##i];
		##i=##i+1;
	}
	saveas $$1;
	setactivehidemaru ##h;
	disabledraw;
	closehidemaru 1;
return;

RemoveColorMarker:	// カラーマーカーを除去する
	// ##1 = 識別フラグ (0だと全部除去)

	if (##1)	##t = 0x04;
	gofiletop;
	nextcolormarker ##t|0x01, ##1;
	while(##x!=x || ##y!=y){
		beginsel;
		nextcolormarker ##t|0x02, ##1;
		colormarker;
		escape; left;
		##x=x; ##y=y;
		nextcolormarker ##t|0x01, ##1;
	}
return;
